{"version":3,"sources":["assets/logo-light.svg","layout/header.js","utils/getGeolocation.js","utils/fetchTdxApi.js","components/ChangeCenter.js","assets/icon-geolocation.svg","components/GetLocationButton.js","assets/icon-bicycle-white.svg","assets/icon-parking-white.svg","assets/icon-bicycle.svg","assets/icon-parking.svg","components/FindTypeButton.js","assets/icon-bike-marker-grey.svg","assets/icon-bike-marker-blue.svg","assets/icon-bike-marker-purple.svg","utils/availabilityNum.js","assets/icon-bicycle-grey.svg","assets/icon-parking-grey.svg","components/MultipleMarkers.js","components/MapChild.js","assets/icon-user-position-mobile.svg","layout/MapPage.js","App.js","index.js"],"names":["Logo","className","target","rel","href","src","logoSvg","alt","Header","props","asyncGetGeolocation","JAPAN_COORDINATES","Promise","resolve","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","alert","TIMEOUT","UNKNOWN_ERROR","getAvailableBikes","userPosition","length","console","log","lat","lng","stationUrl","bikeUrl","allSettled","fetchTdxApi","data","result","value","bikeData","stationIndex","stationData","map","item","StationUID","bikeDetail","filter","indexOf","i","stationStatus","stationId","stationName","StationName","Zh_tw","stationAddress","StationAddress","stationPosition","StationPosition","PositionLat","PositionLon","serviceStatus","ServiceStatus","availableRentBikes","AvailableRentBikes","availableReturnBikes","AvailableReturnBikes","srcUpdateTime","SrcUpdateTime","push","url","getToken","tokenCode","fetch","headers","authorization","access_token","response","json","queryString","URLSearchParams","grant_type","client_id","process","client_secret","toString","method","body","ChangeCenter","useMap","setView","center","GetLocationButton","onMoveTo","isLocatingUser","onClick","disabled","geolocactionSvg","FindTypeButton","isFindingBikes","handleFindingType","htmlFor","type","name","id","checked","onChange","hidden","bicycleWhiteSvg","bicycleSvg","parkingSvg","parkingWhiteSvg","createIcon","Icon","iconUrl","iconSize","MultipleMarkers","getdata","station","index","options","updateTime","exec","Marker","icon","bikemarker0","bikemarker1","bikemarker2","Popup","bicycleGreySvg","parkingGreySvg","Tooltip","direction","offset","opacity","permanent","MapChild","DragMap","getPosition","useState","setIsFindingBikes","MapContainer","zoom","scrollWheelZoom","style","height","TileLayer","attribution","myIcon","marker","MapPage","setUserPosition","dragposi","setDragposi","setGetdata","setIsLocatingUser","locatingMessage","useCallback","urlocation","bikes","useEffect","getdragPosition","useMapEvents","dragend","e","getCenter","newposition","data1","App","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.4dfea0c8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-light.b2db820f.svg\";","import { useState } from \"react\";\nimport \"./header.css\";\nimport logoSvg from \"../assets/logo-light.svg\";\n\n\nfunction Logo() {\n  return (\n    <h1 className=\"logo\">\n      <a\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        href=\"https://reiracode.github.io/react-leaflet-map\"\n      >\n        <img src={logoSvg} alt=\"Bikeland\" />\n      </a>\n    </h1>\n  );\n}\n\n\n\nfunction Header(props) {\n\n\n  return (\n    <header>\n      <div className=\"header_wrapper\">\n        <Logo />\n        \n      </div>\n   \n    </header>\n  );\n}\n\nexport default Header;\n","// const asyncGetGeolocation = (\n//   options = { enableHighAccuracy: true, timeout: 5000, maximumAge: 0 }\n// ) => {\n//   return new Promise((resolve, reject) => {\n//     function onResolve(data) {\n//       resolve([data.coords.latitude, data.coords.longitude]);\n//     }\n//     function onReject(error) {\n//       reject(error);\n//     }\n//     navigator.geolocation.getCurrentPosition(onResolve, onReject, options);\n//   });\n// };\n\nconst asyncGetGeolocation = () => {\n  const JAPAN_COORDINATES = [35.4122, 139.4130];\n  return new Promise((resolve) => {\n    if (navigator.geolocation) {\n      const position = (position) => {\n        resolve([position.coords.latitude, position.coords.longitude]);\n      };\n      const showError = (error) => {\n        switch (error.code) {\n          case error.PERMISSION_DENIED:\n            alert(\"讀取不到您目前的位置\");\n            break;\n          case error.POSITION_UNAVAILABLE:\n            alert(\"讀取不到您目前的位置\");\n            break;\n          case error.TIMEOUT:\n            alert(\"讀取位置逾時\");\n            break;\n          case error.UNKNOWN_ERROR:\n            alert(\"Error\");\n            break;\n        }\n        // resolve([35.4122, 139.4130]);\n        resolve(JAPAN_COORDINATES);\n      };\n      navigator.geolocation.getCurrentPosition(position, showError);\n    }\n  });\n};\n\nexport default asyncGetGeolocation;\n","// import jsSHA from \"jssha/dist/sha1\";\n// https://tdx.transportdata.tw/api-service/swagger#/Bike%20Advanced(Nearby)/BikeApi_Station_AllCity_NearBy_2870\n\nexport async function getAvailableBikes(userPosition) {\n  if (userPosition.length == 0){\n    console.log(\"0\")\n    return;\n  }\n\n  //前後端的関係：如果api 後端没有處理好，advanced的功能就會在前端，json資料的比對，計算距離\n  //口罩地圖和ubike的不同。\n  //不用token的話：放上github 就用basic 搭配indexOf > -1\n  try {\n    const [lat, lng] = userPosition;\n    // const stationUrl = `https://tdx.transportdata.tw/api/basic/v2/Bike/Station/City/Taipei?&%24format=JSON`;\n    // const bikeUrl = `https://tdx.transportdata.tw/api/basic/v2/Bike/Availability/City/Taipei?%24format=JSON`;\n    // const stationUrl = `https://tdx.transportdata.tw/api/basic/v2/Bike/Station/City/Taipei?%24top=30&%24spatialFilter=nearby(${lat},${lng},1000)&%24format=JSON`;\n    // const bikeUrl = `https://tdx.transportdata.tw/api/basic/v2/Bike/Availability/City/Taipei?%24format=JSON`;\n\n    const stationUrl = `https://tdx.transportdata.tw/api/advanced/v2/Bike/Station/NearBy?%24top=30&%24spatialFilter=nearby(${lat},${lng},1000)&%24format=JSON`;\n    const bikeUrl = `https://tdx.transportdata.tw/api/advanced/v2/Bike/Availability/NearBy?%24top=30&%24spatialFilter=nearby(${lat},${lng},1000)&%24format=JSON`;\n\n    const data = await Promise.allSettled([\n      fetchTdxApi(stationUrl),\n      fetchTdxApi(bikeUrl),\n    ]);\n\n    const result = [];\n    const [stationData, bikeData] = [data[0].value, data[1].value];\n    // console.log(stationData)\n    // console.log(bikeData)\n\n    \n    const stationIndex = stationData.map(item => item.StationUID);\n    const bikeDetail = bikeData.filter((item) => stationIndex.indexOf(item.StationUID) > -1)\n    // console.log(bikeDetail)\n\n    ////////////////////\n    for (let i = 0; i < stationData.length; i++) {\n      let stationStatus = {\n        stationId: stationData[i].StationUID,\n        stationName: stationData[i].StationName.Zh_tw,\n        stationAddress: stationData[i].StationAddress.Zh_tw,\n        stationPosition: {\n          lat: stationData[i].StationPosition.PositionLat,\n          lng: stationData[i].StationPosition.PositionLon,\n        },\n        serviceStatus: bikeDetail[i].ServiceStatus,\n        availableRentBikes: bikeDetail[i].AvailableRentBikes,\n        availableReturnBikes: bikeDetail[i].AvailableReturnBikes,\n        srcUpdateTime: bikeDetail[i].SrcUpdateTime,\n      };\n      result.push(stationStatus);\n    }\n    // console.log(result) ;\n    return result;\n\n\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport default async function fetchTdxApi(url) {\n  const tokenCode = await getToken();\n  try {\n    const response = await fetch(url, { headers: { authorization: `Bearer ${tokenCode.access_token}` } });\n    // const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function getToken() {\n  const parameter = {\n    grant_type: \"client_credentials\",\n    client_id: process.env.REACT_APP_API_ID,\n    client_secret: process.env.REACT_APP_API_KEY\n  };\n  let auth_url = \"https://tdx.transportdata.tw/auth/realms/TDXConnect/protocol/openid-connect/token\";\n  const queryString = new URLSearchParams(parameter).toString();\n\n  let response = await fetch(auth_url, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    body: (queryString)\n  });\n\n  // you can check for response.ok here, and literally just throw an error if you want\n  return await response.json();\n}\n","import { useMap, useMapEvents } from \"react-leaflet\";\n\nconst ChangeCenter = (props) => {\n  const map = useMap();\n  map.setView(props.center);\n  return null;\n};\n\n \n\n\nexport { ChangeCenter };\n\n\n","export default __webpack_public_path__ + \"static/media/icon-geolocation.7783d3dc.svg\";","import geolocactionSvg from \"../assets/icon-geolocation.svg\";\n\nconst GetLocationButton = ({ onMoveTo,isLocatingUser }) => {\n  return (\n    <button\n      className=\"geolocation\"\n      onClick={onMoveTo}\n      disabled={isLocatingUser ? true : false}\n    >\n      <img src={geolocactionSvg} alt=\"geolocation icon\" />\n    </button>\n  )\n}\n\nexport default GetLocationButton;","export default __webpack_public_path__ + \"static/media/icon-bicycle-white.0cdc8c9e.svg\";","export default __webpack_public_path__ + \"static/media/icon-parking-white.95eab66a.svg\";","export default __webpack_public_path__ + \"static/media/icon-bicycle.39345ce0.svg\";","export default __webpack_public_path__ + \"static/media/icon-parking.d41d0ee4.svg\";","import bicycleWhiteSvg from \"../assets/icon-bicycle-white.svg\";\nimport parkingWhiteSvg from \"../assets/icon-parking-white.svg\";\n\nimport bicycleSvg from \"../assets/icon-bicycle.svg\";\nimport parkingSvg from \"../assets/icon-parking.svg\";\n\nconst FindTypeButton = ({ isFindingBikes, handleFindingType }) => {\n  return (\n    <div className=\"find_type_wrapper\">\n      <label htmlFor=\"find_bikes\">\n        <input\n          type=\"radio\"\n          name=\"find_type\"\n          id=\"find_bikes\"\n          checked={isFindingBikes}\n          onChange={() => {\n            return;\n          }}\n          hidden\n        />\n        <button\n          className=\"find_type typography-bold typography-button\"\n          onClick={handleFindingType}\n        >\n          <div className=\"find_type_img\">\n            {isFindingBikes ? (\n              <img src={bicycleWhiteSvg} alt=\"bicycle white icon\" />\n            ) : (\n              <img src={bicycleSvg} alt=\"bicycle white icon\" />\n            )}\n          </div>\n          找單車\n        </button>\n      </label>\n      <label htmlFor=\"find_parks\">\n        <input\n          type=\"radio\"\n          name=\"find_type\"\n          id=\"find_parks\"\n          checked={!isFindingBikes}\n          onChange={() => {\n            return;\n          }}\n          hidden\n        />\n        <button\n          className=\"find_type typography-bold typography-button\"\n          onClick={handleFindingType}\n        >\n          <div className=\"find_type_img\">\n            {isFindingBikes ? (\n              <img src={parkingSvg} alt=\"parking icon\" />\n            ) : (\n              <img src={parkingWhiteSvg} alt=\"parking icon\" />\n            )}\n          </div>\n          找車位\n        </button>\n      </label>\n    </div>\n  )\n}\n\nexport default FindTypeButton;","export default __webpack_public_path__ + \"static/media/icon-bike-marker-grey.d4557c2f.svg\";","export default __webpack_public_path__ + \"static/media/icon-bike-marker-blue.74f2085e.svg\";","export default __webpack_public_path__ + \"static/media/icon-bike-marker-purple.3b18ae3f.svg\";","import { Icon } from 'leaflet';\nimport bikemarker0 from \"../assets/icon-bike-marker-grey.svg\";\nimport bikemarker1 from '../assets/icon-bike-marker-blue.svg';\nimport bikemarker2 from \"../assets/icon-bike-marker-purple.svg\";\n\n//ICON\nfunction createIcon(name) {\n  return new Icon({\n    iconUrl: name,\n    iconSize: [41, 47]\n  })\n}\n\nexport default function availabilityNum(options) {\n  if (options == 0) {\n    return createIcon(bikemarker0);\n  } else if (options <= 5) {\n    return createIcon(bikemarker1);\n  } else {\n    return createIcon(bikemarker2);\n  }\n}\n","export default __webpack_public_path__ + \"static/media/icon-bicycle-grey.7b8cb6aa.svg\";","export default __webpack_public_path__ + \"static/media/icon-parking-grey.84ff3ab7.svg\";","import { Marker, Popup, Tooltip } from \"react-leaflet\";\nimport availabilityNum from \"../utils/availabilityNum\";\nimport bicycleGreySvg from \"../assets/icon-bicycle-grey.svg\";\nimport parkingGreySvg from \"../assets/icon-parking-grey.svg\";\n\nconst MultipleMarkers = ({ getdata, isFindingBikes }) => {\n  if (getdata.length == 0) return;\n\n  return getdata.map((station, index) => {\n    // const bikeversion = station.stationName.includes(\"2.0\") ? \"plus\" : \"\"\n    const updateTime = /.*T(\\d*:\\d*)/g.exec(station.srcUpdateTime)[1];\n    return (\n      <Marker key={index}\n        icon={availabilityNum(isFindingBikes ?station.availableRentBikes  : station.availableReturnBikes)}\n        position={[station.stationPosition.lat, station.stationPosition.lng]}\n      >\n        <Popup className=\"request-popup\">\n          <div className=\"bikeMarkers_popup\">\n            <h3 className=\"typography-bold typography-button\">{station.stationName}</h3>\n            <div className=\"popup_info\">\n              <div className=\"popup_bikes \">\n                <img src={bicycleGreySvg} alt=\"bicycle icon\" />\n                <span className=\"quantity typography-bold typography-button\">{station.availableRentBikes}</span>\n              </div>\n              <div className=\"popup_parks\">\n                <img src={parkingGreySvg} alt=\"bicycle icon\" />\n                <span className=\"quantity typography-bold typography-button\">{station.availableReturnBikes}</span>\n              </div>\n              <span className=\"update_time typography-medium typography-caption\">{updateTime}更新</span>\n            </div>\n          </div>\n        </Popup>\n\n        <Tooltip direction=\"center\" offset={[0, -2]} opacity={1} permanent>\n          {/* {isFindingBikes ? (station.availableRentBikes) : (station.availableReturnBikes)} */}\n          {isFindingBikes ? <span className=\"test1\">{station.availableRentBikes}</span> : <span className=\"test2\">{station.availableReturnBikes}</span>}\n        </Tooltip>\n\n      </Marker>\n    );\n  });\n}\n\nexport default MultipleMarkers;","import React, { useState } from \"react\";\nimport { MapContainer, TileLayer  } from \"react-leaflet\";\nimport { ChangeCenter } from \"./ChangeCenter\";\nimport GetLocationButton from \"./GetLocationButton\";\nimport FindTypeButton from \"./FindTypeButton\";\nimport MultipleMarkers from \"./MultipleMarkers\";\n\n\nexport default function MapChild({ userPosition, getdata, DragMap, getPosition, isLocatingUser }) {\n  //  //找單車/車位\n  const [isFindingBikes, setIsFindingBikes] = useState(true);\n  function handleFindingType() {\n    // setIsFindingBikes((bool) => !bool);\n    setIsFindingBikes(!isFindingBikes);\n  }\n\n  return (\n    <main>\n      {userPosition ?\n        <MapContainer\n          center={userPosition}\n          zoom={16}\n          scrollWheelZoom={true}\n          style={{ height: \"calc(100vh - 40px)\" }}\n        >\n          <ChangeCenter\n            center={userPosition}\n          />\n\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n\n          <DragMap />\n\n          {/* bikemarker */}\n          <MultipleMarkers getdata={getdata} isFindingBikes={isFindingBikes} />\n\n          <FindTypeButton  \n            isFindingBikes={isFindingBikes}\n            handleFindingType={handleFindingType}\n          />\n\n          <GetLocationButton\n            onMoveTo={getPosition}\n            isLocatingUser={isLocatingUser}\n          />\n\n        </MapContainer>\n        : null\n      }\n\n    </main>\n  )\n\n}","export default __webpack_public_path__ + \"static/media/icon-user-position-mobile.4af8babd.svg\";","import React, { useState, useCallback, useEffect } from \"react\";\nimport { Icon } from 'leaflet';\nimport { useMapEvents, Marker, Popup } from \"react-leaflet\";\nimport asyncGetGeolocation from \"../utils/getGeolocation\";\nimport { getAvailableBikes } from \"../utils/fetchTdxApi\";\nimport MapChild from \"../components/MapChild\";\nimport marker from '../assets/icon-user-position-mobile.svg';\nimport \"leaflet/dist/leaflet.css\";\nimport \"../index.css\";\nimport \"../layout/main.css\"\n\nconst myIcon = new Icon({\n  iconUrl: marker,\n  iconSize: [32, 32]\n})\n\n\nexport default function MapPage() {\n  // ---------way1\n  const [userPosition, setUserPosition] = useState(null);\n  const [dragposi, setDragposi] = useState(null);\n  //bikes\n  const [getdata, setGetdata] = useState([]);\n  const [isLocatingUser, setIsLocatingUser] = useState(true);\n  const locatingMessage = (\n    <div className=\"overlay\">\n      <div className=\"loader\"></div> \n      {/* <span className=\"typography-bold typography-h4\">定位中...</span> */}\n    </div>\n  );\n\n  //可複用 取得現在位子，並以此取得bikes data\n  const getPosition = useCallback(async () => {\n    const urlocation = await asyncGetGeolocation();\n    console.log(\"--------yourlocation\" + urlocation)\n    setUserPosition(urlocation);\n \n    const bikes = await getAvailableBikes(urlocation);\n    setGetdata(bikes); \n    setIsLocatingUser(false);\n  }, [])\n\n\n  //get dragPosition ==> then get bikes\n  async function getdragPosition() {\n    if (dragposi === null) {\n      return\n    } else {\n      const bikes = await getAvailableBikes(dragposi);\n      setGetdata(bikes);\n      console.log(bikes);\n    }\n  }\n\n  // dragend 取得position  更新位子到 dragposi/userPosition\n  function DragMap() {\n    const map = useMapEvents({\n      dragend: (e) => {\n        console.log(\"mapCenter\", e.target.getCenter());\n        const newposition = e.target.getCenter();\n        const data1 = [newposition.lat, newposition.lng]\n        setDragposi(data1);\n        setUserPosition(data1);\n      }\n    });\n    return (\n        <Marker position={userPosition} icon={myIcon}>\n          <Popup>You are here</Popup>\n        </Marker>\n    )\n  }\n\n  //loading時，就取得現在位子\n  useEffect(() => {\n    getPosition()\n    console.log('getPosition in useEffect');\n  }, [getPosition]);\n\n  //loading不用，當drap時才需要用 getPosition()\n  useEffect(() => {\n    if (dragposi) {\n      console.log('getdragPosition in useEffect' + dragposi);\n      getdragPosition(dragposi);\n    }\n  }, [dragposi]);\n\n\n  return (\n    <main>\n      {/* {locatingMessage} */}\n      {isLocatingUser ? locatingMessage : null}\n      {userPosition ?\n        <MapChild\n          userPosition={userPosition}\n          getdata={getdata}\n          DragMap={DragMap}\n          getPosition={getPosition}\n          isLocatingUser={isLocatingUser}\n        /> \n        : null\n      }\n\n    </main>\n  )\n\n}","import Header from \"./layout/header\";\nimport MapPage from \"./layout/MapPage\";\nimport \"./styles.css\";\n\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      < MapPage />\n    </div>\n  );\n\n}\n\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}