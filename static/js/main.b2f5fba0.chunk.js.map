{"version":3,"sources":["assets/logo-light.svg","layout/header.js","utils/getGeolocation.js","utils/fetchTdxApi.js","assets/icon-user-position-mobile.svg","assets/icon-bicycle-grey.svg","assets/icon-geolocation.svg","assets/icon-bicycle.svg","assets/icon-parking-grey.svg","assets/icon-bicycle-white.svg","assets/icon-parking.svg","assets/icon-parking-white.svg","layout/main.js","components/MapTest.js","assets/icon-bike-marker-grey.svg","assets/icon-bike-marker-blue.svg","assets/icon-bike-marker-purple.svg","App.js","index.js"],"names":["Header","asyncGetGeolocation","Promise","resolve","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","alert","TIMEOUT","UNKNOWN_ERROR","getAvailableBikes","userPosition","console","log","length","lat","lng","stationUrl","bikeUrl","allSettled","fetchTdxApi","data","result","value","bikeData","stationIndex","stationData","map","item","StationUID","bikeDetail","filter","indexOf","i","stationStatus","stationId","stationName","StationName","Zh_tw","stationAddress","StationAddress","stationPosition","StationPosition","PositionLat","PositionLon","serviceStatus","ServiceStatus","availableRentBikes","AvailableRentBikes","availableReturnBikes","AvailableReturnBikes","srcUpdateTime","SrcUpdateTime","push","url","getToken","tokenCode","fetch","headers","authorization","access_token","response","json","queryString","URLSearchParams","grant_type","client_id","client_secret","toString","method","body","Main","bikes","myIcon","Icon","iconUrl","marker","iconSize","createIcon","bikemarker0","bikemarker1","bikemarker2","name","MapTest","useState","setUserPosition","dragposi","setDragposi","getdata","setGetdata","getPosition","useCallback","urlocation","MyComponent","useMapEvents","dragend","e","target","getCenter","newposition","data1","Marker","Popup","MultipleMarkers","station","index","options","includes","icon","className","src","bicycleGreySvg","alt","parkingGreySvg","Tooltip","direction","offset","opacity","permanent","useEffect","getdragPosition","MapContainer","center","zoom","scrollWheelZoom","style","height","TileLayer","attribution","App","capital","DefaultIcon","L","shadowUrl","iconShadow","prototype","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.b2f5fba0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-light.b2db820f.svg\";","import { useState } from \"react\";\nimport \"./header.css\";\nimport logoSvg from \"../assets/logo-light.svg\";\n\n\nfunction Logo() {\n  return (\n    <h1 className=\"logo\">\n      <a\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        href=\"https://reiracode.github.io/nbike\"\n      >\n        <img src={logoSvg} alt=\"Bikeland\" />\n      </a>\n    </h1>\n  );\n}\n\n\n\nfunction Header(props) {\n\n\n  return (\n    <header>\n      <div className=\"header_wrapper\">\n        <Logo />\n        \n      </div>\n   \n    </header>\n  );\n}\n\nexport default Header;\n","// const asyncGetGeolocation = (\n//   options = { enableHighAccuracy: true, timeout: 5000, maximumAge: 0 }\n// ) => {\n//   return new Promise((resolve, reject) => {\n//     function onResolve(data) {\n//       resolve([data.coords.latitude, data.coords.longitude]);\n//     }\n//     function onReject(error) {\n//       reject(error);\n//     }\n//     navigator.geolocation.getCurrentPosition(onResolve, onReject, options);\n//   });\n// };\n\nconst asyncGetGeolocation = () => {\n  return new Promise((resolve) => {\n    if (navigator.geolocation) {\n      const position = (position) => {\n        resolve([position.coords.latitude, position.coords.longitude]);\n      };\n      const showError = (error) => {\n        switch (error.code) {\n          case error.PERMISSION_DENIED:\n            alert(\"讀取不到您目前的位置\");\n            break;\n          case error.POSITION_UNAVAILABLE:\n            alert(\"讀取不到您目前的位置\");\n            break;\n          case error.TIMEOUT:\n            alert(\"讀取位置逾時\");\n            break;\n          case error.UNKNOWN_ERROR:\n            alert(\"Error\");\n            break;\n        }\n        resolve([35.4122, 139.4130]);\n      };\n      navigator.geolocation.getCurrentPosition(position, showError);\n    }\n  });\n};\n\nexport default asyncGetGeolocation;\n","// import jsSHA from \"jssha/dist/sha1\";\n// https://tdx.transportdata.tw/api-service/swagger#/Bike%20Advanced(Nearby)/BikeApi_Station_AllCity_NearBy_2870\n\nexport async function getAvailableBikes(userPosition) {\n  console.log(userPosition)\n\n  if (userPosition.length == 0){\n    console.log(\"0\")\n    return;\n  }\n\n  //前後端的関係：如果api 後端没有處理好，advanced的功能就會在前端，json資料的比對，計算距離\n  //口罩地圖和ubike的不同。\n  //不用token的話：放上github 就用basic 搭配indexOf > -1\n  try {\n    const [lat, lng] = userPosition;\n    // const stationUrl = `https://tdx.transportdata.tw/api/basic/v2/Bike/Station/City/Taipei?&%24format=JSON`;\n    // const bikeUrl = `https://tdx.transportdata.tw/api/basic/v2/Bike/Availability/City/Taipei?%24format=JSON`;\n\n    // const stationUrl = `https://tdx.transportdata.tw/api/basic/v2/Bike/Station/City/Taipei?%24top=30&%24spatialFilter=nearby(${lat},${lng},1000)&%24format=JSON`;\n    // const bikeUrl = `https://tdx.transportdata.tw/api/basic/v2/Bike/Availability/City/Taipei?%24format=JSON`;\n\n    const stationUrl = `https://tdx.transportdata.tw/api/advanced/v2/Bike/Station/NearBy?%24top=30&%24spatialFilter=nearby(${lat},${lng},1000)&%24format=JSON`;\n    const bikeUrl = `https://tdx.transportdata.tw/api/advanced/v2/Bike/Availability/NearBy?%24top=30&%24spatialFilter=nearby(${lat},${lng},1000)&%24format=JSON`;\n\n    const data = await Promise.allSettled([\n      fetchTdxApi(stationUrl),\n      fetchTdxApi(bikeUrl),\n    ]);\n\n    const result = [];\n    const [stationData, bikeData] = [data[0].value, data[1].value];\n\n    const stationIndex = stationData.map(item => item.StationUID);\n    // console.log(stationIndex)\n\n    const bikeDetail = bikeData.filter((item) => stationIndex.indexOf(item.StationUID) > -1)\n    // console.log(bikeDetail)\n\n    ////////////////////\n    for (let i = 0; i < stationData.length; i++) {\n      let stationStatus = {\n        stationId: stationData[i].StationUID,\n        stationName: stationData[i].StationName.Zh_tw,\n        stationAddress: stationData[i].StationAddress.Zh_tw,\n        stationPosition: {\n          lat: stationData[i].StationPosition.PositionLat,\n          lng: stationData[i].StationPosition.PositionLon,\n        },\n        serviceStatus: bikeDetail[i].ServiceStatus,\n        availableRentBikes: bikeDetail[i].AvailableRentBikes,\n        availableReturnBikes: bikeDetail[i].AvailableReturnBikes,\n        srcUpdateTime: bikeDetail[i].SrcUpdateTime,\n      };\n      result.push(stationStatus);\n    }\n    // console.log(result) ;\n    return result;\n\n\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport default async function fetchTdxApi(url) {\n  const tokenCode = await getToken();\n  try {\n    const response = await fetch(url, { headers: { authorization: `Bearer ${tokenCode.access_token}` } });\n    \n    // const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function getToken() {\n  const parameter = {\n    grant_type: \"client_credentials\",\n    client_id: \"reira.igg-178246c9-c6da-466e\",\n    client_secret: \"9f16dc51-0a6e-492c-9dd6-278b917d0c67\"\n  };\n  let auth_url = \"https://tdx.transportdata.tw/auth/realms/TDXConnect/protocol/openid-connect/token\";\n  const queryString = new URLSearchParams(parameter).toString();\n\n  let response = await fetch(auth_url, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    body: (queryString)\n  });\n\n  // you can check for response.ok here, and literally just throw an error if you want\n  return await response.json();\n}\n","export default __webpack_public_path__ + \"static/media/icon-user-position-mobile.4af8babd.svg\";","export default __webpack_public_path__ + \"static/media/icon-bicycle-grey.7b8cb6aa.svg\";","export default __webpack_public_path__ + \"static/media/icon-geolocation.7783d3dc.svg\";","export default __webpack_public_path__ + \"static/media/icon-bicycle.39345ce0.svg\";","export default __webpack_public_path__ + \"static/media/icon-parking-grey.84ff3ab7.svg\";","export default __webpack_public_path__ + \"static/media/icon-bicycle-white.0cdc8c9e.svg\";","export default __webpack_public_path__ + \"static/media/icon-parking.d41d0ee4.svg\";","export default __webpack_public_path__ + \"static/media/icon-parking-white.95eab66a.svg\";","import \"./main.css\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport asyncGetGeolocation from \"../utils/getGeolocation\";\nimport { getAvailableBikes } from \"../utils/fetchTdxApi\";\nimport BikeMap from \"../components/bikeMap\";\n// import BikeMap from \"../components/bikeMap3\";\n\nfunction Main() {\n\n\n\n  function handleFindingType() {\n    setIsFindingBikes((bool) => !bool);\n  }\n\n  const TAIPEI_COORDINATES = [35.4122, 139.4130];\n  const [userPosition, setUserPosition] = useState(TAIPEI_COORDINATES);\n  // const [userPosition, setUserPosition] = useState(false);\n\n  const [bikesAvailable, setBikesAvailable] = useState([]);\n  // const [isLocatingUser, setIsLocatingUser] = useState(false);\n  const [isLocatingUser, setIsLocatingUser] = useState(true);\n  const [isFindingBikes, setIsFindingBikes] = useState(true);\n \n  ///方式1   OK   try catch ////////////\n  // const getLocation = async () => {\n  //   try {\n  //     const userCoordinates = await asyncGetGeolocation();\n  //     console.log(\"default定位成功\" + userCoordinates)\n  //     setUserPosition(userCoordinates);\n  //     const bikes = await getAvailableBikes(userCoordinates);\n  //     console.log(bikes)\n  //     setBikesAvailable(bikes);\n  //     setIsLocatingUser(false);\n  //   } catch (error) {\n  //     throw error;\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   getLocation();\n  // }, []);\n\n\n  // 方式3 -------  用 useCallback 並將回傳的函式取名為 fetchData\n  // const fetchData = useCallback(() => {\n  // //   // STEP 3：把原本的 fetchData 改名為 fetchingData 放到 useCallback 的函式內\n  //   const fetchingData = async () => {\n  //     const data1 = await asyncGetGeolocation();\n  //     setUserPosition(data1);\n  //     const bikes = await getAvailableBikes(data1);\n  //     setBikesAvailable(bikes);\n  //     setIsLocatingUser(false);\n  //   };\n  //   fetchingData();\n  // }, []);\n\n  // useEffect(() => {\n  //   console.log('execute function in useEffect');\n  //   fetchData();\n  //   // STEP 6：把透過 useCallback 回傳的函式放到 useEffect 的 dependencies 中\n  // }, [fetchData]);\n\n\n  //  方式4  -------   OK callback //   //   //   //\n  // async function getPosts() {\n  //   const data = await asyncGetGeolocation();\n  //   console.log(data);\n  //   return data;\n  // }\n\n  const getPosition = useCallback(async () => {\n    const data = await asyncGetGeolocation();\n    console.log(\"yourlocation\" + data)\n    setUserPosition(data);\n\n    const bikes = await getAvailableBikes(data);\n    setBikesAvailable(bikes);\n    setIsLocatingUser(false);\n  }, [])\n\n  useEffect(() => {\n    console.log('execute getPosition in useEffect');\n    getPosition()\n  }, [getPosition]);\n\n \n    //   //   //   //   //   //   //   // \n  const locatingMessage = (\n    <div className=\"overlay\">\n      <span className=\"typography-bold typography-h4\">定位中</span>\n    </div>\n  );\n\n  return (\n    <main>\n      {/* {locatingMessage} */}\n      {isLocatingUser ? locatingMessage : null}\n      {userPosition &&\n        <BikeMap\n          userPosition={userPosition}\n          bikesAvailable={bikesAvailable}\n          isFindingBikes={isFindingBikes}\n          handleLocateUser={getPosition}\n          isLocatingUser={isLocatingUser}\n          handleFindingType={handleFindingType}\n        />\n      }\n  \n \n    </main>\n  );\n}\n\nexport default Main;\n","import React, { useState, useMemo, useRef, useCallback, useEffect } from \"react\";\nimport { MapContainer, TileLayer, useMapEvents, Marker, Popup, Tooltip   } from \"react-leaflet\";\nimport asyncGetGeolocation from \"../utils/getGeolocation\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"../index.css\";\nimport { getAvailableBikes } from \"../utils/fetchTdxApi\";\n\nimport marker from '../assets/icon-user-position-mobile.svg';\n\nimport bikemarker0 from \"../assets/icon-bike-marker-grey.svg\";\nimport bikemarker1 from '../assets/icon-bike-marker-blue.svg';\nimport bikemarker2 from \"../assets/icon-bike-marker-purple.svg\";\n\nimport bicycleGreySvg from \"../assets/icon-bicycle-grey.svg\";\nimport parkingGreySvg from \"../assets/icon-parking-grey.svg\";\nimport { Icon } from 'leaflet';\n\nconst myIcon = new Icon({\n  iconUrl: marker,\n  iconSize: [32, 32]\n})\n\nlet bikes;\n//ICON\nconst bikeIcon0 = createIcon(bikemarker0);\nconst bikeIcon1 = createIcon(bikemarker1);\nconst bikeIcon2 = createIcon(bikemarker2);\n\nfunction availabilityNum(options) {\n  if (options === 0) {\n    // return bikeIcon0;\n    return createIcon(bikemarker0);\n  } else if (options <= 5) {\n    // return bikeIcon1;\n    return createIcon(bikemarker1);\n  } else {\n    // return bikeIcon2;\n    return createIcon(bikemarker2);\n  }\n}\n\nfunction createIcon(name) {\n  return  new Icon({\n    iconUrl: name,\n    iconSize: [41, 47]\n  })\n}\n\nexport default function MapTest() {\n  // ---------way1\n  // const TAIPEI_COORDINATES = [35.4122, 139.4130];\n  const TAIPEI_COORDINATES = [25.0223245, 121.499514];\n  \n  const [userPosition, setUserPosition] = useState(TAIPEI_COORDINATES);\n  const [dragposi, setDragposi] = useState(null);\n  // const [userPosition, setUserPosition] = useState(position)\n  const [getdata, setGetdata] = useState([]);\n\n\n  //可複用 \n  const getPosition = useCallback(async () => {\n    //取得現在位子\n    const urlocation = await asyncGetGeolocation();\n    console.log(\"yourlocation\" + urlocation)\n\n    setUserPosition(urlocation);\n    //取得現在位子，並以此取得bikes data\n    const bikes = await getAvailableBikes(urlocation);\n    setGetdata(bikes);\n    console.log(bikes);\n  }, [])\n\n//get dragPosition ==> then get bikes\n  async function getdragPosition() {\n    console.log(dragposi);\n    \n    if (dragposi === null) {\n      return\n    } else {\n      bikes = await getAvailableBikes(dragposi);\n      setGetdata(bikes);\n      console.log(bikes);\n    }\n  }\n\n\n  function MyComponent() {\n    const map = useMapEvents({\n      dragend: (e) => {\n        console.log(\"mapCenter\", e.target.getCenter());\n        const newposition = e.target.getCenter();\n        const data1 = [newposition.lat, newposition.lng]\n        setDragposi(data1);\n        setUserPosition(data1);\n      }\n      // , locationfound(e) {\n      //   setDragposi(data1);\n      //   setUserPosition(data1);\n      // }\n\n    });\n    // return null;\n    return dragposi === null ? null : (\n      <Marker position={dragposi}>\n        <Popup>You are here</Popup>\n      </Marker>\n    )\n  }\n  \n \n\n  // useEffect(() => {\n  //   drag2Position();\n  // }, [drag2Position]);\n \n\n\n  useEffect(() => {\n    //loading時，就取得現在位子\n    getPosition()\n    console.log('getPosition in useEffect');\n    // getdragPosition(dragposi);\n  }, [getPosition]);\n\n  \n//loading  不用，當drap時才需要用\n  useEffect(() => {\n    if (dragposi) {\n      console.log('getdragPosition in useEffect' + dragposi);\n      // console.log(dragposi)\n      getdragPosition(dragposi);\n    }\n  }, [dragposi]);\n\n\n  // const BikeMydata = () => {\n  //   console.log(getdata)\n  //   const names = []\n  //   // getdata.forEach((station, index) => { \n  //   //   console.log(station.stationName)\n  //   // })\n  //   getdata.forEach((station, index) => {\n  //     names.push(\n  //       < Marker\n  //         icon={bikeIcon0}\n  //         key={index}\n  //         position={[station.stationPosition.lat, station.stationPosition.lng]}\n  //       >\n  //         {/* <Tooltip direction=\"right\" offset={[0, 0]} opacity={1} permanent>{station.availableRentBikes}</Tooltip> */}\n       \n  //         <Popup>{station.stationName}</Popup>\n  //       </Marker>)\n  //   })\n\n  //   return (\n  //     <div className='container'>\n  //       {names}\n  //     </div>\n  //   )\n \n  // }\n //default : []  render marker\n  function MultipleMarkers() {\n    // const map = useMapEvents({\n    //   click() {\n    //     map.locate();\n    //   }\n    // });\n    console.log(getdata)//old data\n   \n    if (getdata.length == 0) return;\n\n    return getdata.map((station, index) => {\n      const bikeversion = station.stationName.includes(\"2.0\") ? \"plus\" : \"\"\n      \n      return (\n        <Marker key={index}\n          // icon={bikeIcon0}\n          icon={availabilityNum(station.availableRentBikes)}\n          position={[station.stationPosition.lat, station.stationPosition.lng]}\n        >\n        \n          <Popup className=\"request-popup\">\n            <div className=\"bikeMarkers_popup\">\n              <h3 className=\"typography-bold typography-button\">{station.stationName}</h3>\n              <div className=\"popup_info\">\n                <div className=\"popup_bikes \">\n                  <img src={bicycleGreySvg} alt=\"bicycle icon\" />\n                  <span className=\"quantity typography-bold typography-button\">{station.availableRentBikes}</span>\n                </div>\n                <div className=\"popup_parks  \">\n                  <img src={parkingGreySvg} alt=\"bicycle icon\" />\n                  <span className=\"quantity typography-bold typography-button\">{station.availableReturnBikes}</span>\n                </div>\n\n              </div>\n            </div>\n\n          </Popup>\n\n          <Tooltip direction=\"center\" offset={[0, -4]} opacity={1} permanent>\n           {station.availableRentBikes}\n          </Tooltip>\n          {/* <Popup>{Object.keys(elem).length > 0 ? elem.bodyfindSegnalazione[0][0].indirizzo + ' ' + elem.bodyfindSegnalazione[0][0].civico + ' ' + elem.bodyfindSegnalazione[0][0].quartiere : ''}</Popup> */}\n        </Marker>\n      );\n    });\n  }\n\n\n\n  // const points = [\n  //   {\n  //     lat: 33.589803,\n  //     lng: 130.420681,\n  //     title: 'point 1'\n  //   },\n  //   {\n  //     lat: 35.6895,\n  //     lng: 139.69171,\n  //     title: 'point 2'\n  //   }\n  // ];\n\n  // const MyMarker = () => {\n  //   const points = [\n  //     {\n  //       lat: 33.589803,\n  //       lng: 130.420681,\n  //       title: 'point 1'\n  //     },\n  //     {\n  //       lat: 33.6895,\n  //       lng: 139.69171,\n  //       title: 'point 2'\n  //     }];\n  //   const names = []\n  //   points.forEach(({ lat, lng, title }, index) => {\n  //     names.push(\n  //       < Marker\n  //         key={index}\n  //         position={[lat, lng]}\n  //       // icon={bikeIcon}\n  //       >\n  //         <Popup>{title}</Popup>\n  //       </Marker>)\n  //   })\n\n  //   return (\n  //     <div className='container'>\n  //       {names}\n  //     </div>\n  //   )\n  // }\n\n  return (\n    userPosition.length ?\n    <MapContainer\n      center={userPosition}\n      zoom={16}\n      scrollWheelZoom={true}\n      style={{ height: \"100vh\" }}\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n\n      {/* drag map */}\n      <MyComponent />\n\n      {/* bikemarker */}\n      <MultipleMarkers />\n\n      {/* user position */}\n      <Marker position={userPosition} icon={myIcon}>\n        <Popup>You're Here!</Popup>\n      </Marker>\n      </MapContainer>\n      :null\n  )\n\n}","export default __webpack_public_path__ + \"static/media/icon-bike-marker-grey.d4557c2f.svg\";","export default __webpack_public_path__ + \"static/media/icon-bike-marker-blue.74f2085e.svg\";","export default __webpack_public_path__ + \"static/media/icon-bike-marker-purple.3b18ae3f.svg\";","// import { useState } from \"react\";\n// // way1 contry \n// import MapArea from \"./components/MapArea\";\n// import CountryButtons from \"./components/CountryButtons\";\n// import \"./styles.css\";a\nimport Header from \"./layout/header\";\nimport Main from \"./layout/main\";\n\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\nimport \"leaflet/dist/leaflet.css\";\n\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents } from \"react-leaflet\";\n// import marker from './assets/icon-user-position-mobile.svg'\n// import { Icon } from 'leaflet'\n// const myIcon = new Icon({\n//   iconUrl: marker,\n//   iconSize: [32, 32]\n// })\n\n //-----way2\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\n\n\nimport MapWrapper from \"./components/MapWrapper\";\nimport MapTest from \"./components/MapTest\";\n\nexport default function App() {\n  const [coordinate, setCoordinate] = useState({\n    latitude: 35.6803997,\n    longitude: 139.7690174,\n    capital: \"Tokyo\"\n  }); \n\n\n  \n  // ---- way2\n  let DefaultIcon = L.icon({\n    iconUrl: icon,\n    shadowUrl: iconShadow\n  });\n\n  L.Marker.prototype.options.icon = DefaultIcon;\n\n\n  const position = [35.6803997, 139.7690174];\n\n  function MyComponent() {\n    const map = useMapEvents({\n      dragend: (e) => {\n        console.log(\"mapCenter\", e.target.getCenter());\n        console.log(\"map bounds\", e.target.getBounds());\n      }\n    });\n    return null;\n  }\n\n\n  return (\n    <div className=\"App\">\n\n      {/* <Header  />\n      <Main/> */}\n\n\n      {/* <MapWrapper /> */}\n     < MapTest/>  \n      {/* way1 contry  */}\n      {/* <MapArea coordinate={coordinate} />\n      <CountryButtons setCoordinate={setCoordinate} /> */}\n\n      {/* <MapWrapper/> */}\n      \n      {/* ===========drag components================= */}\n      {/* <MapContainer\n        center={position}\n        zoom={13}\n        scrollWheelZoom={false}\n        style={{ height: \"100vh\" }}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <MyComponent />\n        <Marker position={position} >\n          <Popup>\n            A pretty CSS3 popup. <br /> Easily customizable.\n          </Popup>\n        </Marker>\n      </MapContainer> */}\n\n     \n    </div>\n\n\n \n  );\n\n}\n\n// import React from \"react\";\n\n\n// function App() {\n//   return (\n//     <>\n//       <Header />\n//       <Main />\n//     </>\n//   );\n// }\n\n// export default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}