{"version":3,"sources":["assets/logo-light.svg","components/CountryButton.js","components/CountryButtons.js","layout/header.js","utils/getGeolocation.js","utils/fetchTdxApi.js","assets/icon-user-position-mobile.svg","assets/icon-geolocation.svg","assets/icon-bicycle.svg","assets/icon-bicycle-grey.svg","assets/icon-bicycle-white.svg","assets/icon-parking.svg","assets/icon-parking-grey.svg","assets/icon-parking-white.svg","utils/decideByAvailability.js","components/bikeMap.js","layout/main.js","App.js","index.js"],"names":["makeStyles","theme","styledButton","width","Logo","className","target","rel","href","src","logoSvg","alt","Header","props","asyncGetGeolocation","Promise","resolve","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","alert","TIMEOUT","UNKNOWN_ERROR","getAvailableBikes","userPosition","console","log","lat","lng","stationUrl","allSettled","fetchTdxApi","data","result","value","bikeData","stationIndex","stationData","map","item","StationUID","bikeDetail","filter","indexOf","i","length","stationStatus","stationId","stationName","StationName","Zh_tw","stationAddress","StationAddress","stationPosition","StationPosition","PositionLat","PositionLon","serviceStatus","ServiceStatus","availableRentBikes","AvailableRentBikes","availableReturnBikes","AvailableReturnBikes","srcUpdateTime","SrcUpdateTime","push","url","getToken","tokenCode","fetch","headers","authorization","access_token","response","json","queryString","URLSearchParams","grant_type","client_id","client_secret","toString","method","body","decideByAvailability","options","BikeMap","bikesAvailable","isFindingBikes","isLocatingUser","handleLocateUser","handleFindingType","bikeMapRef","useRef","userPositionMarkerRef","bikeMarkersRef","getLocationButton","disabled","onClick","geolocactionSvg","useEffect","current","L","center","zoom","layers","tileLayer","attribution","userPositionIcon","icon","iconUrl","userPositionMobileSvg","iconSize","marker","removeLayer","setView","addTo","bikeMarkerStatusStyle_bikes","bikeMarkerStatusStyle_parks","forEach","bikeMarker","station","index","bikeversion","includes","availableBikesStyle","availableParksStyle","availableBikesImg","bicycleGreySvg","availableParksImg","parkingGreySvg","divIcon","html","updateTime","exec","popupHtml","bindPopup","id","htmlFor","type","name","checked","onChange","hidden","bicycleWhiteSvg","bicycleSvg","parkingSvg","parkingWhiteSvg","Main","useState","setUserPosition","setBikesAvailable","setIsLocatingUser","setIsFindingBikes","getPosition","useCallback","bikes","locatingMessage","bool","App","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.4c072725.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-light.b2db820f.svg\";","import { Button, Grid, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  styledButton: {\n    width: \"200px\"\n  }\n}));\n\nconst CountryButton = (props) => {\n  const classes = useStyles();\n\n  // Click Event\n  const buttonClick = () => {\n    props.setCoordinate({\n      latitude: props.countryInfo.latitude,\n      longitude: props.countryInfo.longitude,\n      capital: props.countryInfo.capital\n    });\n  };\n  return (\n    <Grid item xs={6}>\n      <Button\n        variant=\"contained\"\n        onClick={buttonClick}\n        className={classes.styledButton}\n        value={props.countryInfo.capital}\n      >\n        {props.countryInfo.country}\n      </Button>\n    </Grid>\n  );\n};\n\nexport default CountryButton;\n","import { Button, Grid, makeStyles } from \"@material-ui/core\";\nimport CountryButton from \"./CountryButton\";\n\nconst useStyles = makeStyles((theme) => ({\n  styledButton: {\n    width: \"200px\"\n  }\n}));\n\nconst CountryButtons = (props) => {\n  const classes = useStyles();\n\n  // Click Event\n  const buttonClick = (e) => {\n    console.log(e.currentTarget.value);\n  };\n  return (\n    <Grid container spacing={3} alignItems=\"center\" justifyContent=\"center\">\n      <CountryButton\n        countryInfo={{\n          capital: \"パリ\",\n          country: \"フランス\",\n          latitude: 48.856614,\n          longitude: 2.3522219\n        }}\n        setCoordinate={props.setCoordinate}\n      />\n      <CountryButton\n        countryInfo={{\n          capital: \"ワシントンD.C.\",\n          country: \"アメリカ合衆国\",\n          latitude: 38.9071923,\n          longitude: -77.0368707\n        }}\n        setCoordinate={props.setCoordinate}\n      />\n      <CountryButton\n        countryInfo={{\n          capital: \"ロンドン\",\n          country: \"イギリス\",\n          latitude: 51.5072178,\n          longitude: -0.1275862\n        }}\n        setCoordinate={props.setCoordinate}\n      />\n      <CountryButton\n        countryInfo={{\n          capital: \"ベルリン\",\n          country: \"ドイツ\",\n          latitude: 52.5200066,\n          longitude: 13.404954\n        }}\n        setCoordinate={props.setCoordinate}\n      />\n      <CountryButton\n        countryInfo={{\n          capital: \"ローマ\",\n          country: \"イタリア\",\n          latitude: 41.9027835,\n          longitude: 12.4963655\n        }}\n        setCoordinate={props.setCoordinate}\n      />\n      <CountryButton\n        countryInfo={{\n          capital: \"オタワ\",\n          country: \"カナダ\",\n          latitude: 45.4215296,\n          longitude: -75.6971931\n        }}\n        setCoordinate={props.setCoordinate}\n      />\n      <CountryButton\n        countryInfo={{\n          capital: \"東京\",\n          country: \"日本\",\n          latitude: 35.6803997,\n          longitude: 139.7690174\n        }}\n        setCoordinate={props.setCoordinate}\n      />\n    </Grid>\n  );\n};\n\nexport default CountryButtons;\n","import { useState } from \"react\";\nimport \"./header.css\";\nimport logoSvg from \"../assets/logo-light.svg\";\n\n\nfunction Logo() {\n  return (\n    <h1 className=\"logo\">\n      <a\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        href=\"https://reiracode.github.io/nbike\"\n      >\n        <img src={logoSvg} alt=\"Bikeland\" />\n      </a>\n    </h1>\n  );\n}\n\n\n\nfunction Header(props) {\n\n\n  return (\n    <header>\n      <div className=\"header_wrapper\">\n        <Logo />\n        \n      </div>\n   \n    </header>\n  );\n}\n\nexport default Header;\n","// const asyncGetGeolocation = (\n//   options = { enableHighAccuracy: true, timeout: 5000, maximumAge: 0 }\n// ) => {\n//   return new Promise((resolve, reject) => {\n//     function onResolve(data) {\n//       resolve([data.coords.latitude, data.coords.longitude]);\n//     }\n//     function onReject(error) {\n//       reject(error);\n//     }\n//     navigator.geolocation.getCurrentPosition(onResolve, onReject, options);\n//   });\n// };\n\nconst asyncGetGeolocation = () => {\n  return new Promise((resolve) => {\n    if (navigator.geolocation) {\n      const position = (position) => {\n        resolve([position.coords.latitude, position.coords.longitude]);\n      };\n      const showError = (error) => {\n        switch (error.code) {\n          case error.PERMISSION_DENIED:\n            alert(\"讀取不到您目前的位置\");\n            break;\n          case error.POSITION_UNAVAILABLE:\n            alert(\"讀取不到您目前的位置\");\n            break;\n          case error.TIMEOUT:\n            alert(\"讀取位置逾時\");\n            break;\n          case error.UNKNOWN_ERROR:\n            alert(\"Error\");\n            break;\n        }\n        resolve([35.4122, 139.4130]);\n      };\n      navigator.geolocation.getCurrentPosition(position, showError);\n    }\n  });\n};\n\nexport default asyncGetGeolocation;\n","// import jsSHA from \"jssha/dist/sha1\";\n// https://tdx.transportdata.tw/api-service/swagger#/Bike%20Advanced(Nearby)/BikeApi_Station_AllCity_NearBy_2870\n\nexport async function getAvailableBikes(userPosition) {\n  console.log(userPosition)\n\n  //前後端的関係：如果api 後端没有處理好，advanced的功能就會在前端，json資料的比對，計算距離\n  //口罩地圖和ubike的不同。\n  //不用token的話：放上github 就用basic 搭配indexOf > -1\n  try {\n    const [lat, lng] = userPosition;\n    // const stationUrl = `https://tdx.transportdata.tw/api/basic/v2/Bike/Station/City/Taipei?&%24format=JSON`;\n    // const bikeUrl = `https://tdx.transportdata.tw/api/basic/v2/Bike/Availability/City/Taipei?%24format=JSON`;\n\n    const stationUrl = `https://tdx.transportdata.tw/api/basic/v2/Bike/Station/City/Taipei?%24top=30&%24spatialFilter=nearby(${lat},${lng},1000)&%24format=JSON`;\n    const bikeUrl = `https://tdx.transportdata.tw/api/basic/v2/Bike/Availability/City/Taipei?%24format=JSON`;\n\n    // const stationUrl = `https://tdx.transportdata.tw/api/advanced/v2/Bike/Station/NearBy?%24top=30&%24spatialFilter=nearby(${lat},${lng},1000)&%24format=JSON`;\n    // const bikeUrl = `https://tdx.transportdata.tw/api/advanced/v2/Bike/Availability/NearBy?%24top=30&%24spatialFilter=nearby(${lat},${lng},1000)&%24format=JSON`;\n\n    const data = await Promise.allSettled([\n      fetchTdxApi(stationUrl),\n      fetchTdxApi(bikeUrl),\n    ]);\n\n    const result = [];\n    const [stationData, bikeData] = [data[0].value, data[1].value];\n\n    const stationIndex = stationData.map(item => item.StationUID);\n    // console.log(stationIndex)\n\n    const bikeDetail = bikeData.filter((item) => stationIndex.indexOf(item.StationUID) > -1)\n    console.log(bikeDetail)\n\n    ////////////////////\n    for (let i = 0; i < stationData.length; i++) {\n      let stationStatus = {\n        stationId: stationData[i].StationUID,\n        stationName: stationData[i].StationName.Zh_tw,\n        stationAddress: stationData[i].StationAddress.Zh_tw,\n        stationPosition: {\n          lat: stationData[i].StationPosition.PositionLat,\n          lng: stationData[i].StationPosition.PositionLon,\n        },\n        serviceStatus: bikeDetail[i].ServiceStatus,\n        availableRentBikes: bikeDetail[i].AvailableRentBikes,\n        availableReturnBikes: bikeDetail[i].AvailableReturnBikes,\n        srcUpdateTime: bikeDetail[i].SrcUpdateTime,\n      };\n      result.push(stationStatus);\n    }\n    console.log(result) ;\n    return result;\n\n\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport default async function fetchTdxApi(url) {\n  const tokenCode = await getToken();\n  try {\n    const response = await fetch(url, { headers: { authorization: `Bearer ${tokenCode.access_token}` } });\n    \n    // const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function getToken() {\n  const parameter = {\n    grant_type: \"client_credentials\",\n    client_id: \"reira.igg-178246c9-c6da-466e\",\n    client_secret: \"9f16dc51-0a6e-492c-9dd6-278b917d0c67\"\n  };\n  let auth_url = \"https://tdx.transportdata.tw/auth/realms/TDXConnect/protocol/openid-connect/token\";\n  const queryString = new URLSearchParams(parameter).toString();\n\n  let response = await fetch(auth_url, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    body: (queryString)\n  });\n\n  // you can check for response.ok here, and literally just throw an error if you want\n  return await response.json();\n}\n","export default __webpack_public_path__ + \"static/media/icon-user-position-mobile.4af8babd.svg\";","export default __webpack_public_path__ + \"static/media/icon-geolocation.7783d3dc.svg\";","export default __webpack_public_path__ + \"static/media/icon-bicycle.39345ce0.svg\";","export default __webpack_public_path__ + \"static/media/icon-bicycle-grey.7b8cb6aa.svg\";","export default __webpack_public_path__ + \"static/media/icon-bicycle-white.0cdc8c9e.svg\";","export default __webpack_public_path__ + \"static/media/icon-parking.d41d0ee4.svg\";","export default __webpack_public_path__ + \"static/media/icon-parking-grey.84ff3ab7.svg\";","export default __webpack_public_path__ + \"static/media/icon-parking-white.95eab66a.svg\";","export default function decideByAvailability(options) {\n  if (options === 0) {\n    return \"none\";\n  } else if (options <= 5) {\n    return \"few\";\n  } else {\n    return \"\";\n  }\n}\n ","import userPositionMobileSvg from \"../assets/icon-user-position-mobile.svg\";\nimport geolocactionSvg from \"../assets/icon-geolocation.svg\";\n\nimport bicycleSvg from \"../assets/icon-bicycle.svg\";\nimport bicycleGreySvg from \"../assets/icon-bicycle-grey.svg\";\nimport bicycleWhiteSvg from \"../assets/icon-bicycle-white.svg\";\n\nimport parkingSvg from \"../assets/icon-parking.svg\";\nimport parkingGreySvg from \"../assets/icon-parking-grey.svg\";\nimport parkingWhiteSvg from \"../assets/icon-parking-white.svg\";\n\nimport { useEffect, useRef } from \"react\";\nimport decideByAvailability from \"../utils/decideByAvailability\";\nimport L from \"leaflet\";\n// https://cherniavskii.com/using-leaflet-in-react-apps-with-react-hooks/\n\nexport default function BikeMap({\n  userPosition,\n  bikesAvailable,\n  isFindingBikes,\n  isLocatingUser,\n  handleLocateUser,\n  handleFindingType,\n}) {\n  // create map\n  const bikeMapRef = useRef(null);\n\n  // add marker\n  const userPositionMarkerRef = useRef(null);\n  const bikeMarkersRef = useRef([]);\n\n  //重新定位button\n  const getLocationButton = (\n    <button\n      className=\"geolocation\"\n      disabled={isLocatingUser ? true : false}\n      onClick={handleLocateUser}>\n      <img src={geolocactionSvg} alt=\"geolocation icon\" />\n    </button>\n  );\n\n  useEffect(() => {\n    console.log(bikeMapRef.current)\n    if (bikeMapRef.current) return;\n\n    bikeMapRef.current = L.map(\"bike_map\", {\n      center: userPosition,\n      zoom: 15,\n      layers: [\n        L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n          attribution:\n            '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n        })\n      ]\n    });\n\n  }, [userPosition]);\n\n\n  //  setView\n  useEffect(() => {\n    if (!bikeMapRef.current) return; //no map\n    // create your position icon\n    const userPositionIcon = L.icon({\n      iconUrl: userPositionMobileSvg,\n      iconSize: [36, 36]\n    });\n\n    //  create marker\n    userPositionMarkerRef.current = L.marker(userPosition, {\n      icon: userPositionIcon,\n    });\n\n    if (userPositionMarkerRef.current)\n      bikeMapRef.current.removeLayer(userPositionMarkerRef.current);\n      bikeMapRef.current.setView(userPosition, 15);\n    // add marker\n    userPositionMarkerRef.current.addTo(bikeMapRef.current);\n  }, [userPosition]);\n\n\n  //setting bikeMarkers\n  useEffect(() => {\n    if (!bikeMapRef.current) return; //no map\n    //remove previous bike markers\n    bikeMarkersRef.current.forEach((bikeMarker) => {\n      bikeMapRef.current.removeLayer(bikeMarker);\n    });\n\n    bikeMarkersRef.current = [];\n    let bikeMarkerStatusStyle_bikes, bikeMarkerStatusStyle_parks;\n\n    bikesAvailable.forEach((station, index) => {\n      const bikeversion = station.stationName.includes(\"2.0\") ? \"plus\" : \"\"\n      bikeMarkerStatusStyle_bikes = decideByAvailability(station.availableRentBikes) + \" \" + bikeversion;\n      bikeMarkerStatusStyle_parks = decideByAvailability(station.availableReturnBikes) + \" \" + bikeversion;\n \n      // popup   \n      const availableBikesStyle = decideByAvailability(station.availableRentBikes) + \" \" + bikeversion;\n      const availableParksStyle = decideByAvailability(station.availableReturnBikes) + \" \" + bikeversion;\n      const availableBikesImg = `<img src=${bicycleGreySvg} alt=\"bicycle icon\" />`;\n      const availableParksImg = `<img src=${parkingGreySvg} alt=\"parking icon\" />`\n\n      //L marker的資料\n      bikeMarkersRef.current[index] = L.marker(\n        [station.stationPosition.lat, station.stationPosition.lng],\n        {\n          icon: L.divIcon({\n            className: `bikeMarker ${isFindingBikes\n              ? bikeMarkerStatusStyle_bikes\n              : bikeMarkerStatusStyle_parks\n              }`,\n            html: `<span class=\"bikeMarker_number typography-bold typography-button\">\n            ${isFindingBikes\n                ? station.availableRentBikes\n                : station.availableReturnBikes\n              }</span>`\n          }),\n        }\n      );\n\n      const updateTime = /.*T(\\d*:\\d*)/g.exec(station.srcUpdateTime)[1];\n\n      // bind popup to markers?\n      const popupHtml = `<div class=\"bikeMarkers_popup\">\n          <h3 class=\"typography-bold typography-button\">${station.stationName}</h3>\n          <div class=\"popup_info\">\n              <div class=\"popup_bikes ${availableBikesStyle}\">\n                  ${availableBikesImg}\n                  <span class=\"quantity typography-bold typography-button\">${station.availableRentBikes}</span>\n              </div>\n              <div class=\"popup_parks ${availableParksStyle}\">\n                  ${availableParksImg}\n                  <span class=\"quantity typography-bold typography-button\">${station.availableReturnBikes}</span>\n              </div>\n              <span class=\"update_time typography-medium typography-caption\">${updateTime}更新</span>\n          </div>\n        </div>`;\n\n      bikeMarkersRef.current[index].bindPopup(popupHtml, {\n        className: \"popupClass\",\n      });\n\n      // bikesRef.current[index] add to map\n      bikeMarkersRef.current[index].addTo(bikeMapRef.current);\n\n    });\n  }, [bikesAvailable, isFindingBikes]);\n\n \n  return userPosition ? <div id=\"bike_map\">\n    <div className=\"find_type_wrapper\">\n      <label htmlFor=\"find_bikes\">\n        <input\n          type=\"radio\"\n          name=\"find_type\"\n          id=\"find_bikes\"\n          checked={isFindingBikes}\n          onChange={() => {\n            return;\n          }}\n          hidden\n        />\n        <button\n          className=\"find_type typography-bold typography-button\"\n          onClick={handleFindingType}\n        >\n          <div className=\"find_type_img\">\n            {isFindingBikes ? (\n              <img src={bicycleWhiteSvg} alt=\"bicycle white icon\" />\n            ) : (\n              <img src={bicycleSvg} alt=\"bicycle white icon\" />\n            )}\n          </div>\n          找單車\n        </button>\n      </label>\n      <label htmlFor=\"find_parks\">\n        <input\n          type=\"radio\"\n          name=\"find_type\"\n          id=\"find_parks\"\n          checked={!isFindingBikes}\n          onChange={() => {\n            return;\n          }}\n          hidden\n        />\n        <button\n          className=\"find_type typography-bold typography-button\"\n          onClick={handleFindingType}\n        >\n          <div className=\"find_type_img\">\n            {isFindingBikes ? (\n              <img src={parkingSvg} alt=\"parking icon\" />\n            ) : (\n              <img src={parkingWhiteSvg} alt=\"parking icon\" />\n            )}\n          </div>\n          找車位\n        </button>\n      </label>\n    </div>  {getLocationButton}</div> : null;\n}\n","import \"./main.css\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport asyncGetGeolocation from \"../utils/getGeolocation\";\nimport { getAvailableBikes } from \"../utils/fetchTdxApi\";\nimport BikeMap from \"../components/bikeMap\";\n// import BikeMap from \"../components/bikeMap3\";\n\nfunction Main() {\n  function handleFindingType() {\n    setIsFindingBikes((bool) => !bool);\n  }\n\n  // const TAIPEI_COORDINATES = [35.4122, 139.4130];\n  // const [userPosition, setUserPosition] = useState(TAIPEI_COORDINATES);\n  const [userPosition, setUserPosition] = useState(false);\n  const [bikesAvailable, setBikesAvailable] = useState([]);\n  // const [isLocatingUser, setIsLocatingUser] = useState(false);\n  const [isLocatingUser, setIsLocatingUser] = useState(true);\n  const [isFindingBikes, setIsFindingBikes] = useState(true);\n \n  ///方式1   OK   try catch ////////////\n  // const getLocation = async () => {\n  //   try {\n  //     const userCoordinates = await asyncGetGeolocation();\n  //     console.log(\"default定位成功\" + userCoordinates)\n  //     setUserPosition(userCoordinates);\n  //     const bikes = await getAvailableBikes(userCoordinates);\n  //     console.log(bikes)\n  //     setBikesAvailable(bikes);\n  //     setIsLocatingUser(false);\n  //   } catch (error) {\n  //     throw error;\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   getLocation();\n  // }, []);\n\n\n  // 方式3 -------  用 useCallback 並將回傳的函式取名為 fetchData\n  // const fetchData = useCallback(() => {\n  // //   // STEP 3：把原本的 fetchData 改名為 fetchingData 放到 useCallback 的函式內\n  //   const fetchingData = async () => {\n  //     const data1 = await asyncGetGeolocation();\n  //     setUserPosition(data1);\n  //     const bikes = await getAvailableBikes(data1);\n  //     setBikesAvailable(bikes);\n  //     setIsLocatingUser(false);\n  //   };\n  //   fetchingData();\n  // }, []);\n\n  // useEffect(() => {\n  //   console.log('execute function in useEffect');\n  //   fetchData();\n  //   // STEP 6：把透過 useCallback 回傳的函式放到 useEffect 的 dependencies 中\n  // }, [fetchData]);\n\n\n  //  方式4  -------   OK callback //   //   //   //\n  // async function getPosts() {\n  //   const data = await asyncGetGeolocation();\n  //   console.log(data);\n  //   return data;\n  // }\n\n  const getPosition = useCallback(async () => {\n    const data = await asyncGetGeolocation();\n    console.log(\"yourlocation\" + data)\n    setUserPosition(data);\n\n    const bikes = await getAvailableBikes(data);\n    setBikesAvailable(bikes);\n    setIsLocatingUser(false);\n  }, [])\n\n  useEffect(() => {\n    console.log('execute getPosition in useEffect');\n    getPosition()\n  }, [getPosition]);\n\n \n    //   //   //   //   //   //   //   // \n  const locatingMessage = (\n    <div className=\"overlay\">\n      <span className=\"typography-bold typography-h4\">定位中</span>\n    </div>\n  );\n\n  return (\n    <main>\n      {/* {locatingMessage} */}\n      {isLocatingUser ? locatingMessage : null}\n      {userPosition &&\n        <BikeMap\n          userPosition={userPosition}\n          bikesAvailable={bikesAvailable}\n          isFindingBikes={isFindingBikes}\n          handleLocateUser={getPosition}\n          isLocatingUser={isLocatingUser}\n          handleFindingType={handleFindingType}\n        />\n      }\n  \n \n    </main>\n  );\n}\n\nexport default Main;\n","import { useState } from \"react\";\nimport MapArea from \"./components/MapArea\";\nimport CountryButtons from \"./components/CountryButtons\";\nimport \"./styles.css\";\n\n// export default function App() {\n//   const [coordinate, setCoordinate] = useState({\n//     latitude: 35.6803997,\n//     longitude: 139.7690174,\n//     capital: \"Tokyo\"\n//   }); \n//   return (\n//     <div className=\"App\">\n//       <MapArea coordinate={coordinate} />\n//       <CountryButtons setCoordinate={setCoordinate} />\n//     </div>\n//   );\n// }\n\nimport React from \"react\";\nimport Header from \"./layout/header\";\nimport Main from \"./layout/main\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}